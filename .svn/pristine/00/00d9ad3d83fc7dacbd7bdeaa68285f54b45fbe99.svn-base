/**
 * =========================================================================
 *
 * @file WorkQueryComponent
 * @description 工作查询公共组件
 * =========================================================================
 *
 * @author liana
 * @date 2017/3/3
 * @version 1.0
 * =========================================================================
 */
import React, {Component} from 'react'
import {
    View,
    StyleSheet,
    Text,
    Dimensions,
    TouchableOpacity,
} from "react-native"
import Icon from 'react-native-vector-icons/FontAwesome'
const width = Dimensions.get('window').width;

export default class WorkQueryComponent extends Component {
    static defaultProps = {
        rowData: {},
        isSelected: false,              //用于判断是否选择，false为不显示，true为显示
    };

    constructor(props) {
        super(props);
        this.state = {
            squareState: false,         //用于判断选择框的状态
        }
    }

    render() {
        let rowData = this.props.rowData;
        return (
            <View style={styles.container}>
                {/*t通过判断isSelected的状态选择是否显示该组件*/}
                {this.props.isSelected ?
                    <TouchableOpacity
                        style={styles.square}
                        onPress={() => {
                            this.setState({
                                squareState: !this.state.squareState,
                            })
                        }
                        }
                    >
                        <Icon
                            name={this.state.squareState ? "check-square-o" : "square-o"}
                            size={25}
                            style={{color: this.state.squareState ? 'orange' : '#ccc'}}
                        />
                    </TouchableOpacity> :
                    <View></View>
                }

                <View style={styles.info}>
                    <Text style={[styles.infoText, {color: '#ccc'}]}>
                        {
                            rowData.state == 'A' ? '未处理' :
                                rowData.state == 'B' ? '已处理' : '过期未处理'
                        }
                    </Text>
                    <Text style={styles.infoText}>{rowData.name}</Text>
                </View>
                <View style={styles.date}>
                    <Text style={{color: '#444'}}>{rowData.createTime}</Text>
                </View>
                <View style={styles.angle}>
                    <Icon
                        name="angle-right"
                        size={30}
                        style={{color: "orange"}}
                    />
                </View>
            </View>
        )
    };
}
const styles = StyleSheet.create({
    container: {
        borderTopWidth: 1,
        borderTopColor: '#e5e5e5',
        flexDirection: 'row',
        height: 80,
    },
    square: {
        position: 'absolute',
        top: 25,
        left: width * 0.01,
    },
    info: {
        justifyContent: 'center',
        marginLeft: width * 0.07,
    },
    infoText: {
        padding: 8,
        color: '#444',
    },
    date: {
        position: 'absolute',
        top: 15,
        right: width * 0.2,
    },
    angle: {
        position: 'absolute',
        top: 25,
        right: width * 0.08,
    }
});

